{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Developing Sitodo From Zero A training course for developing a simple todo list Web application using Java and Spring Boot framework. Description This is a training course for teaching students on how to develop a Web application using Java programming language and Spring Boot framework, with focus on applying test-first approach and continuous integration/continuous deployment (CI/CD). Learning Outcomes By the end of this course, students should be able to: Apply a workflow when using a version control system such as Git Develop a simple Web application using Java programming language and Spring Boot framework backed by a relational database (e.g. PostgreSQL) for data persistence Create tests for verifying the Web application in different levels, such as unit test, integration test, and functional test Set up a Continuous Integration/Continuous Deployment (CI/CD) pipeline using GitHub Actions (or similar platform such as GitLab CI/CD) Target Audience While the course is designed for fresh graduates with a background in computing, students coming from a different background can read and attend the course. At minimum, you need to: Have some experiences in programming, preferably using an object-oriented language Understand relational data modeling and SQL operations Know Web design and familiar with the related technologies such as HTML, basic JavaScript, and CSS Know basic Linux shell scripting (e.g. bash ) or its equivalent on Windows (e.g. cmd or pwsh ) Requirements To complete this course, you need a computing device that can run the following development tools: A shell, such as bash on Linux or macOS, or cmd / pwsh on Windows Latest long-term support (LTS) version of Java Development Kit (JDK) Download JDK from Adoptium At the time of writing, the latest LTS version is 17 IntelliJ IDEA Community Edition by JetBrains While you can use other text editors (e.g. Visual Studio Code) or IDE such as Eclipse or NetBeans, we might not be able to troubleshoot any problems that come up during the course PostgreSQL database system version 14 In addition, you also need to have an account on the following online services: GitHub an online source code repository and project management system Heroku a Platform-as-a-Service (PaaS) for deploying the Web application Install the CLI tool as well into your local development environment License The learning materials in this course are licensed under Creative Commons Attribution-ShareAlike 4.0 ( CC BY-SA 4.0 ). You can reuse, modify, distribute, and do pretty much anything with the course materials as long as it is permitted under the terms of the license.","title":"Course Overview"},{"location":"#developing-sitodo-from-zero","text":"A training course for developing a simple todo list Web application using Java and Spring Boot framework.","title":"Developing Sitodo From Zero"},{"location":"#description","text":"This is a training course for teaching students on how to develop a Web application using Java programming language and Spring Boot framework, with focus on applying test-first approach and continuous integration/continuous deployment (CI/CD).","title":"Description"},{"location":"#learning-outcomes","text":"By the end of this course, students should be able to: Apply a workflow when using a version control system such as Git Develop a simple Web application using Java programming language and Spring Boot framework backed by a relational database (e.g. PostgreSQL) for data persistence Create tests for verifying the Web application in different levels, such as unit test, integration test, and functional test Set up a Continuous Integration/Continuous Deployment (CI/CD) pipeline using GitHub Actions (or similar platform such as GitLab CI/CD)","title":"Learning Outcomes"},{"location":"#target-audience","text":"While the course is designed for fresh graduates with a background in computing, students coming from a different background can read and attend the course. At minimum, you need to: Have some experiences in programming, preferably using an object-oriented language Understand relational data modeling and SQL operations Know Web design and familiar with the related technologies such as HTML, basic JavaScript, and CSS Know basic Linux shell scripting (e.g. bash ) or its equivalent on Windows (e.g. cmd or pwsh )","title":"Target Audience"},{"location":"#requirements","text":"To complete this course, you need a computing device that can run the following development tools: A shell, such as bash on Linux or macOS, or cmd / pwsh on Windows Latest long-term support (LTS) version of Java Development Kit (JDK) Download JDK from Adoptium At the time of writing, the latest LTS version is 17 IntelliJ IDEA Community Edition by JetBrains While you can use other text editors (e.g. Visual Studio Code) or IDE such as Eclipse or NetBeans, we might not be able to troubleshoot any problems that come up during the course PostgreSQL database system version 14 In addition, you also need to have an account on the following online services: GitHub an online source code repository and project management system Heroku a Platform-as-a-Service (PaaS) for deploying the Web application Install the CLI tool as well into your local development environment","title":"Requirements"},{"location":"#license","text":"The learning materials in this course are licensed under Creative Commons Attribution-ShareAlike 4.0 ( CC BY-SA 4.0 ). You can reuse, modify, distribute, and do pretty much anything with the course materials as long as it is permitted under the terms of the license.","title":"License"},{"location":"toc/","text":"Table of Contents Course Setup Install Git Reminder about newlines, i.e. git config --global auto.crlf input , and install EditorConfig Install Java Ensure JAVA_HOME and PATH configured properly Install IDE (IntelliJ) Set up GitHub account Set up Heroku / Fly.io account At the end, verify all tools have been installed, e.g. git --version Project Scaffolding Use Spring Initializr Initialise Git repository in local development environment Create a new online Git repository on GitHub Update README.md Create a first commit Set up a new Git remote from local repository to online repository on GitHub Push local Git history to the online repository Implement Landing Page (Hello, World) Introduction to test-driven development (TDD) Inside-out TDD part 1: pure unit test Create an HTML page for the landing page with custom greeting from GET request Create a unit test for the controller class Inside-out TDD part 2: unit test in mocked environment using @MockMvc and @SpringBootTest Create a unit test with mock for the controller class Inside-out TDD part 3: functional test with Selenium (Optional) Quality Assurance & Test Automation Deploy the app manually using Heroku or Fly.io CLI tool Automate test suite execution using GitHub Actions on GitHub Automate deployment using GitHub Actions on GitHub Code quality analysis using GitHub Actions on GitHub (Optional) Implement Todo List Implement data persistence layer Create model class using JPA Create migration script using Liquibase Implement business logic layer Create a service class Write a unit test for service class Implement presentation layer Create a controller class Write a unit test for controller class Create a Web page using HTML and Thymeleaf template syntax Extra Challenge: Personalised Todo List with Authentication Define user authentication model Update database schema via database migration Secure the existing todo list behind authentication Extra Challenge: PostgreSQL Database Install PostgreSQL on development and deployment environments Local installation options: system-wide (using installer) or container (Docker) Installation options on PaaS: Heroku Addon (Heroku) or flyctl (Fly.io)","title":"Table of Contents"},{"location":"toc/#table-of-contents","text":"","title":"Table of Contents"},{"location":"toc/#course-setup","text":"Install Git Reminder about newlines, i.e. git config --global auto.crlf input , and install EditorConfig Install Java Ensure JAVA_HOME and PATH configured properly Install IDE (IntelliJ) Set up GitHub account Set up Heroku / Fly.io account At the end, verify all tools have been installed, e.g. git --version","title":"Course Setup"},{"location":"toc/#project-scaffolding","text":"Use Spring Initializr Initialise Git repository in local development environment Create a new online Git repository on GitHub Update README.md Create a first commit Set up a new Git remote from local repository to online repository on GitHub Push local Git history to the online repository","title":"Project Scaffolding"},{"location":"toc/#implement-landing-page-hello-world","text":"Introduction to test-driven development (TDD) Inside-out TDD part 1: pure unit test Create an HTML page for the landing page with custom greeting from GET request Create a unit test for the controller class Inside-out TDD part 2: unit test in mocked environment using @MockMvc and @SpringBootTest Create a unit test with mock for the controller class Inside-out TDD part 3: functional test with Selenium (Optional)","title":"Implement Landing Page (Hello, World)"},{"location":"toc/#quality-assurance-test-automation","text":"Deploy the app manually using Heroku or Fly.io CLI tool Automate test suite execution using GitHub Actions on GitHub Automate deployment using GitHub Actions on GitHub Code quality analysis using GitHub Actions on GitHub (Optional)","title":"Quality Assurance &amp; Test Automation"},{"location":"toc/#implement-todo-list","text":"Implement data persistence layer Create model class using JPA Create migration script using Liquibase Implement business logic layer Create a service class Write a unit test for service class Implement presentation layer Create a controller class Write a unit test for controller class Create a Web page using HTML and Thymeleaf template syntax","title":"Implement Todo List"},{"location":"toc/#extra-challenge-personalised-todo-list-with-authentication","text":"Define user authentication model Update database schema via database migration Secure the existing todo list behind authentication","title":"Extra Challenge: Personalised Todo List with Authentication"},{"location":"toc/#extra-challenge-postgresql-database","text":"Install PostgreSQL on development and deployment environments Local installation options: system-wide (using installer) or container (Docker) Installation options on PaaS: Heroku Addon (Heroku) or flyctl (Fly.io)","title":"Extra Challenge: PostgreSQL Database"},{"location":"setup/","text":"Course Setup TBD.","title":"Overview"},{"location":"setup/#course-setup","text":"TBD.","title":"Course Setup"}]}